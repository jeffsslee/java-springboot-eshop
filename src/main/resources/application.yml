### Common Setting
application:
  name: "E Shopping mall"

spring:
  profiles:
    active: local-mysql # choose one among "local-h2", and "local-mysql"
  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 100MB

  jpa:
    properties:
      hibernate:
        default_batch_fetch_size: 1000

server:
  port: 80
  error:
    whitelabel:
      enabled: false

---
### for "local-h2"

spring:
  config:
    activate:
      on-profile: local-h2

  output:
    ansi:
      enabled: always

  datasource: # H2 connection
    url: jdbc:h2:mem:test
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa: # JPA config
    show-sql: true
    hibernate:
      ddl-auto: create

    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
    #        format_sql: true

  thymeleaf:
    cache: false # in production env, use 'true'
    prefix: file:src/main/resources/templates/

logging:
  file:
    path: logs
  level:
    root: info
    org:
      hibernate:
        SQL: debug  # normally in dev mode
        type: # parameter binding trace for Hibernate 5
          descriptor:
            sql: trace
#        orm:  # parameter binding trace for Hibernate 6
#          jdbc:
#            bind: trace


# item image upload location
itemImgLocation: "D:/devspaces/intellij/demoProjects/eshopspace02/img"
# path to find data out of current project
uploadPath: "file:///D:/devspaces/intellij/demoProjects/eshopspace02/"

---
### for "local-mysql"

spring:
  config:
    activate:
      on-profile: local-mysql

  output:
    ansi:
      enabled: always

  datasource: # MySQL connection
    url: jdbc:mysql://localhost:3306/eshop02?useUnicode=true&characterEncoding=utf8
    username: root
    password: 1234567
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa: # JPA config
    show-sql: true
    hibernate:
      ddl-auto: update # none, validate, update, create, create-drop

    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    #        format_sql: true

  thymeleaf:
    cache: false  # in production env, use 'true'
    prefix: file:src/main/resources/templates/

logging:
  file:
    path: logs
  level:
    root: info

# item image upload location
itemImgLocation: "D:/devspaces/intellij/demoProjects/eshopspace02/img"
# path to find data out of current project
uploadPath: "file:///D:/devspaces/intellij/demoProjects/eshopspace02/"
